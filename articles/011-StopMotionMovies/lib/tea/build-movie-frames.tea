###########################################################################
#
# 
#
###########################################################################

import "CalculatorFactory.tea"
import "FrameSequenceLoader.tea"
import "MovieBuilder.tea"





###########################################################################
#
# 
#
###########################################################################

define my-log args {
    
    define msgInfo $args
    define now     [new TDate]
        
    echo \
            [str-fmt "{0,date,yyyy/MM/dd HH:mm:ss}" $now] " " \
            [apply str-fmt $msgInfo]
}





###########################################################################
#
# 
#
###########################################################################

define build-movie-frames ( scriptDir inputDir inputPrefix inputSufix outputDir duration fps ) {
    
    define loader [new FrameSequenceLoader $inputDir $inputPrefix $inputSufix]
    define calculatorFactory [new CalculatorFactory $scriptDir $outputDir]
    define frameSequence     [$loader load]
    define builder           [new MovieBuilder $frameSequence $duration $fps]
    
    $builder build $calculatorFactory
}





###########################################################################
#
# 
#
###########################################################################

define argc [length $argv]

if { != [length $argv] 6 } {
    echo "Args: script-dir input-dir input-prefix input-sufix output-dir duration"
    exit 1
}

define scriptDir   [nth $argv 0]
define inputDir    [nth $argv 1]
define inputPrefix [nth $argv 2]
define inputSufix  [nth $argv 3]
define outputDir   [nth $argv 4]
define duration    [string->int [nth $argv 5]]
define fps         25

build-movie-frames $scriptDir $inputDir $inputPrefix $inputSufix $outputDir $duration $fps





###########################################################################
#
# 
#
###########################################################################

