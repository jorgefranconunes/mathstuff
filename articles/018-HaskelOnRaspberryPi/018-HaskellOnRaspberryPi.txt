== Haskell on Raspberry Pi 3





== Abstract

Make a LED blink with a Raspberry Pi 3 running an Haskell program.





== Installing Haskell development tools on Raspberry Pi 3

----
sudo apt-get install haskell-platform
----

The `ghc-dynamic` package is not currently available for the `armhf`
architecture. this means we will not be able to generate binaries
dynamically linked to the Haskell Prelude libraries.






== Haskell hello world

----
main :: IO ()
main = do
  putStrLn "Hello, world!"
----

----
jfn@raspberrypi:~$ ghc --make hello.hs
[1 of 1] Compiling Main             ( hello.hs, hello.o )
Linking hello ...
----





== Emacs mode for Haskell

----
sudo apt-get install haskell-mode
----


Add the following to your `~/.emacs`:

[source,lisp]
----
(custom-set-variables
 '(haskell-mode-hook '(turn-on-haskell-indentation)))
----





== GPIO and sysfs

[source,sh]
----
#!/bin/bash

portNumber=12
blinkHalfPeriod=0.5
portBaseDir=/sys/class/gpio/gpio${portNumber}

# Setup port  for output
if [ ! -d ${portBaseDir} ] ; then
    echo ${portNumber} > /sys/class/gpio/export
fi
echo out > ${portBaseDir}/direction

# Blink forever
while true ; do
    echo 1 > ${portBaseDir}/value
    sleep ${blinkHalfPeriod}
    echo 0 > ${portBaseDir}/value
    sleep ${blinkHalfPeriod}
done
----





== Project tree

----
LedBlink/
├── api
│   └── Gpio.hs
├── cli
│   └── Main.hs
├── LedBlink.cabal
└── Setup.hs
----


[source,haskell]
----
import Control.Concurrent
import Control.Monad
import qualified Gpio as Gpio

portNumber = "12"
blinkHalfPeriod = 500000

main :: IO ()
main = do
  putStrLn $ "Using GPIO port " ++ portNumber
  port <- Gpio.outPort portNumber
  forever $ do
    Gpio.turnOn port
    threadDelay blinkHalfPeriod
    Gpio.turnOff port
    threadDelay blinkHalfPeriod
----





== Building with Cabal

Cabal is a system for building and packaging Haskell libraries and
programs.

Useful information on structuring the project directory tree:

*
  http://stackoverflow.com/questions/12305970/how-to-make-a-haskell-cabal-project-with-libraryexecutables-that-still-run-with

*
  http://taylor.fausak.me/2014/03/04/haskeleton-a-haskell-project-skeleton/

.Contents of the `LedBlink.cabal` file.
----
name: LedBlink
version: 0.1.0.0
build-type: Simple

library
  hs-source-dirs: api
  exposed-modules: Gpio
  build-depends: base, directory
  default-language: Haskell2010

executable led
  hs-source-dirs: cli
  main-is: Main.hs
  build-depends: base, directory, LedBlink
  default-language: Haskell2010
----




Haskell build systems:

* https://www.fpcomplete.com/blog/2015/06/why-is-stack-not-cabal

* https://docs.haskellstack.org/en/stable/README/


Issues with permissions of `/sys/class/gpio/gpio*/direction`:

*
  http://stackoverflow.com/questions/25695973/raspberry-pi-gpio-value-file-appears-with-wrong-permissions-momentarily

* https://github.com/raspberrypi/linux/issues/553
