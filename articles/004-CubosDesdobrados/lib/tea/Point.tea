###########################################################################
#
# 
#
###########################################################################

import "util/struct.tea"





###########################################################################
#
# 
#
###########################################################################

struct-ro Point (
    ( x 0 )
    ( y 0 )
)





###########################################################################
#
# 
#
###########################################################################

method Point isSame? ( p ) {
    
    and {== $x [$p get x]} {== $y [$p get y]}
}





###########################################################################
#
# 
#
###########################################################################

method Point translate ( p ) {
    
    new Point \
            ( x [+ $x [$p get x]] ) \
            ( y [+ $y [$p get y]] )
}





###########################################################################
#
# 
#
###########################################################################

global point ( x y ) {
    
    new Point \
            ( x $x ) \
            ( y $y )
}





###########################################################################
#
# 
#
###########################################################################

global point->string ( p ) {
    
    str-cat "(" [float->string [$p get x]] ", " [float->string [$p get y]] ")"
}





###########################################################################
#
# 
#
###########################################################################

